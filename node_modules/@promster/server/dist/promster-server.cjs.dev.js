'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var http = require('http');
var metrics = require('@promster/metrics');

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var http__namespace = /*#__PURE__*/_interopNamespace(http);

const defaultOptions = {
  port: 7788,
  hostname: '0.0.0.0',
  detectKubernetes: false
};
const createServer = async options => {
  const defaultedOptions = {
    ...defaultOptions,
    ...options
  };
  return new Promise((resolve, reject) => {
    const skipServerStart = metrics.skipMetricsInEnvironment(defaultedOptions);
    const port = skipServerStart ? undefined : defaultedOptions.port;
    const server = http__namespace.createServer(async (_req, res) => {
      res.writeHead(200, 'OK', {
        'content-type': metrics.getContentType()
      });
      res.end(await metrics.getSummary());
    });
    server.listen(port, defaultedOptions.hostname, () => {
      server.on('error', reject);
      resolve(server);
    });
  });
};

exports.createServer = createServer;
