import type { TPromsterOptions, TLabelValues, THttpMetrics } from '@promster/types';
import type { Timing } from '../timing';
import { sortLabels } from '../sort-labels';
import { endMeasurementFrom } from '../end-measurement-from';
type TRecordingOptions = {
    labels: TLabelValues;
    requestContentLength?: number;
    responseContentLength?: number;
};
type TLegacyTiming = [number, number];
export type TRequestRecorder = (timing: Timing | TLegacyTiming, recordingOptions: TRecordingOptions) => void;
declare const createRequestRecorder: {
    (metrics: THttpMetrics, options?: TPromsterOptions): TRequestRecorder;
    defaultOptions: TPromsterOptions;
};
export { createRequestRecorder, sortLabels, endMeasurementFrom };
